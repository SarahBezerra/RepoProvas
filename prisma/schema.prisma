// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int    @id @default(autoincrement())
  email      String @unique
  password   String
  Sessions   Sessions[]

  @@map("users")
}

model Sessions {
  id         Int    @id @default(autoincrement())
  userId     Int    @unique
  token      String @unique
  User       User?  @relation(fields: [userId], references: [id])
}

model Term {
  id         Int    @id @default(autoincrement())
  number     Int    @unique
  Discipline Discipline[]

  @@map("terms")
}

model Discipline {
  id         Int    @id @default(autoincrement())
  name       String @unique
  termId     Int    
  Term       Term?  @relation(fields: [termId], references: [id])
  TeacherDiscipline TeacherDiscipline[]

  @@map("disciplines")
}

model Teacher {
  id         Int    @id @default(autoincrement())
  name       String @unique
  TeacherDiscipline TeacherDiscipline[]

  @@map("teachers")
}

model TeacherDiscipline {
  id           Int          @id @default(autoincrement())
  teacherId    Int
  disciplineId Int
  Teacher      Teacher?     @relation(fields: [teacherId], references: [id])
  Discipline   Discipline?  @relation(fields: [disciplineId], references: [id])
  Test         Test[]

	@@map("teachersDisciplines")
}

model Categorie {
  id         Int    @id @default(autoincrement())
  name       String @unique
  Test       Test[]

  @@map("categories")
}

model Test {
  id                   Int      @id @default(autoincrement())
  name                 String   @unique
  pdfUrl               String
  categoryId           Int
  teacherDisciplineId  Int
  Categorie            Categorie?          @relation(fields: [categoryId], references: [id])
  TeacherDiscipline    TeacherDiscipline?  @relation(fields: [teacherDisciplineId], references: [id])

  @@map("tests")
}